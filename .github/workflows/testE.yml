name: Test E
on:
  workflow_dispatch:
  push:
    paths:
      - 'testE/**'
    branches: [main]
permissions:
  id-token: write
  contents: write
  actions: write
jobs:
  deployment:
    runs-on: ubuntu-latest
  
    name: Update Helm Chart    
    steps:
      - name: Clone Deployment Repo
        uses: actions/checkout@master
        with:
          repository: hashilbasheer/argocd-test
          token: ${{ secrets.GHCR_TOKEN }}

      - name: Get Short sha
        run: |
          echo "SHORT_SHA=$(echo ${{ github.sha }} |cut -c1-7)" >> $GITHUB_ENV

      - name: Update Image Version in the HelmChart values.yaml
        run: |
          # Define the retry parameters
          MAX_RETRIES=10
          RETRY_DELAY=15
          
          # Install yq and update the image version
          npm install -g yq
          yq e ".imagesE.tag = \"$SHORT_SHA\"" -i manifest/values.yaml
          
          # Configure git
          git config --global user.name "hashilbasheer"
          git config --global user.email "testr@gmail.com"
          
          # Add and commit the changes
          git add manifest/values.yaml
          git commit -m "image tag changed to '$SHORT_SHA'"
          
          # Retry function to push changes with retries
          retry_push() {
          set -x
          local attempt=1
          local changes_stashed=false
          local rebase_in_progress=false

           while [ $attempt -le $MAX_RETRIES ]; do

           # Check for local changes and stash only if there are any
           if ! git diff-index --quiet HEAD --; then
             echo "Local changes detected, stashing..."
             git stash
             changes_stashed=true
           else
             echo "No local changes to stash."
             changes_stashed=false
           fi

           # Pull the latest changes with rebase
           echo "Pulling latest changes with rebase..."
           git pull --rebase origin main || {
             echo "Rebase failed, aborting..."
             git rebase --abort
             return 1
           }

           # Apply the stashed changes if any
           if [ "$changes_stashed" = true ]; then
            echo "Applying stashed changes..."
            git stash pop || {
                echo "Stash pop failed, trying to resolve conflicts..."

                # Use the remote version to resolve conflict if detected
                git checkout --theirs manifest/values.yaml
                git add manifest/values.yaml

                # Check if a rebase is in progress
                if git rebase --continue; then
                    rebase_in_progress=true
                    echo "Rebase continued successfully."
                else
                    rebase_in_progress=false
                    echo "No rebase in progress or failed to continue."
                    git rebase --abort
                    return 1
                fi
            }
           else
            echo "No stash applied, skipping stash pop."
           fi

           # Try to push the changes
           echo "Attempting to push the changes..."
           if git push origin main; then
            echo "Push succeeded on attempt $attempt."
            return 0
           else
            echo "Push failed on attempt $attempt. Retrying in $RETRY_DELAY seconds..."
            ((attempt++))
            sleep $RETRY_DELAY
           fi
          done

          echo "Push failed after $MAX_RETRIES attempts."
          return 1
          }

          # Set retry parameters
         

          # Execute the retry push logic
          retry_push
